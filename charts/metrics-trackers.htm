<div class='row trunk-section'>
  <div class='col-lg-4 text-left' id='chart'><p class='col-lg-4 text-center' style='padding-top:80px; padding-left:40px'>LOADING...</p></div>
</div>

<script>
    MG._hooks = {};
    var globals = {
        "mouseover": function(d,i) {
            var end_date = convertDate(d.date);
            var start_date = convertDate(new Date(d.date.valueOf()-1*24*60*60*1000));
            d3.select('#chart svg .mg-active-datapoint')
                .text(end_date + ': ' + d.unresolved_pct + '% UNRESOLVED');
            globals["url"] = "https://hg.mozilla.org/releases/mozilla-release/pushloghtml?startdate=" + start_date + "&enddate=" + end_date;
        },
        "markers": {
            "releases":[
                {'date': new Date('2015-12-14T00:00:00.000Z'),'label': '43'},
                {'date': new Date('2016-01-25T00:00:00.000Z'),'label': '44'},
                {'date': new Date('2016-03-08T00:00:00.000Z'),'label': '45'},
                {'date': new Date('2016-04-26T00:00:00.000Z'),'label': '46'}
            ],"events":[
                {'date': new Date('2015-01-01T00:00:00.000Z'),'label': 'GFX Triage'},
                {'date': new Date('2016-04-14T00:00:00.000Z'),'label': 'QA Triage'}
            ]    
        }
    };
    
    function convertDate(d) {
        var day = (d.getDate() < 10) ? '0' + d.getDate().toString() : d.getDate().toString();
        var month = ((d.getMonth()+1) < 10) ? '0' + (d.getMonth()+1).toString() : (d.getMonth()+1).toString();
        var year = d.getFullYear().toString();
        return year + '-' + month + '-' + day;
    }
    
    function initialize(days) {
        var result = [];
        for (var i=days; i>0; i--) {
            result.push({"date":convertDate(new Date((new Date()).valueOf()-i*24*60*60*1000)),"resolved":0,"unresolved":0,"unresolved_pct":0});
        }
        return result;
    }
    
    function draw(chart_data) {
        chart_data = MG.convert.date(chart_data, 'date');
        $.each(chart_data, function(i) {
            if (chart_data[i].resolved != 0 && chart_data[i].unresolved != 0) {
                chart_data[i].unresolved_pct = (chart_data[i].unresolved/(chart_data[i].resolved + chart_data[i].unresolved)*100).toFixed(2);    
            }
        });
        
        var data = [];
        for (var i=chart_data.length-365; i<chart_data.length; i++) {
            data.push(chart_data[i]);
        }
        
        document.getElementById('chart').innerHTML = "";
        MG.data_graphic({
            data: data,
            width: 200,
            height: 200,
            target: document.getElementById('chart'),
            x_accessor: "date",
            y_accessor: "unresolved_pct",
            chart_type: "line",
            max_y: 100,
            linked:true,
            x_label: "% Unresolved",
            mouseover: globals.mouseover
        });
    }
    
    function process(data) {        
        $.each(chart_data, function(index_chart,object_chart) {
            var chart_date = new Date(object_chart.date);
            $.each(data, function(index_data, object_data) {
                var creation_date = new Date(object_data.creation_time.substring(0,10));
                var resolved_date = (object_data.cf_last_resolved) ? new Date(object_data.cf_last_resolved.substring(0,10)) : null;
                // Bug was open on or before the day
                if ((chart_date - creation_date) >= 0) {
                    // Bug was resolved on or before the day
                    if (resolved_date && (resolved_date - chart_date) <= 0) {
                        chart_data[index_chart].resolved += 1;
                    // Bug was unresolved on or before the day
                    } else {
                        chart_data[index_chart].unresolved += 1;
                    }
                }
                if (index_data >= data.length-1 && index_chart >= chart_data.length-1) {
                    console.log(chart_data);
                    draw(chart_data);
                }
            });
            
        });
    }
    
    var date_start = convertDate(new Date((new Date()).valueOf()-365*24*60*60*1000));
    var query = "https://bugzilla.mozilla.org/rest/bug?product=Core" +
        "&component=Canvas%3A 2D&component=Canvas%3A WebGL&component=GFX%3A Color Management&component=Graphics" +
        "&component=Graphics%3A Layers&component=Graphics%3A Text&component=ImageLib&component=Panning and Zooming" +
        "&f2=OP&j2=OR" +
        "&f3=cf_tracking_firefox5&o3=anyexact&v3=%2B%2C %3F" +
        "&f4=cf_tracking_firefox6&o4=anyexact&v4=%2B%2C %3F" +
        "&f5=cf_tracking_firefox7&o5=anyexact&v5=%2B%2C %3F" +
        "&f6=cf_tracking_firefox8&o6=anyexact&v6=%2B%2C %3F" +
        "&f7=cf_tracking_firefox9&o7=anyexact&v7=%2B%2C %3F" +
        "&f8=cf_tracking_firefox10&o8=anyexact&v8=%2B%2C %3F" +
        "&f9=cf_tracking_firefox11&o9=anyexact&v9=%2B%2C %3F" +
        "&f10=cf_tracking_firefox12&o10=anyexact&v10=%2B%2C %3F" +
        "&f11=cf_tracking_firefox13&o11=anyexact&v11=%2B%2C %3F" +
        "&f12=cf_tracking_firefox14&o12=anyexact&v12=%2B%2C %3F" +
        "&f13=cf_tracking_firefox15&o13=anyexact&v13=%2B%2C %3F" +
        "&f14=cf_tracking_firefox16&o14=anyexact&v14=%2B%2C %3F" +
        "&f15=cf_tracking_firefox17&o15=anyexact&v15=%2B%2C %3F" +
        "&f16=cf_tracking_firefox18&o16=anyexact&v16=%2B%2C %3F" +
        "&f17=cf_tracking_firefox19&o17=anyexact&v17=%2B%2C %3F" +
        "&f18=cf_tracking_firefox20&o18=anyexact&v18=%2B%2C %3F" +
        "&f19=cf_tracking_firefox21&o19=anyexact&v19=%2B%2C %3F" +
        "&f20=cf_tracking_firefox22&o20=anyexact&v20=%2B%2C %3F" +
        "&f21=cf_tracking_firefox23&o21=anyexact&v21=%2B%2C %3F" +
        "&f22=cf_tracking_firefox24&o22=anyexact&v22=%2B%2C %3F" +
        "&f23=cf_tracking_firefox25&o23=anyexact&v23=%2B%2C %3F" +
        "&f24=cf_tracking_firefox26&o24=anyexact&v24=%2B%2C %3F" +
        "&f25=cf_tracking_firefox27&o25=anyexact&v25=%2B%2C %3F" +
        "&f26=cf_tracking_firefox28&o26=anyexact&v26=%2B%2C %3F" +
        "&f27=cf_tracking_firefox29&o27=anyexact&v27=%2B%2C %3F" +
        "&f28=cf_tracking_firefox30&o28=anyexact&v28=%2B%2C %3F" +
        "&f29=cf_tracking_firefox31&o29=anyexact&v29=%2B%2C %3F" +
        "&f30=cf_tracking_firefox32&o30=anyexact&v30=%2B%2C %3F" +
        "&f31=cf_tracking_firefox33&o31=anyexact&v31=%2B%2C %3F" +
        "&f32=cf_tracking_firefox34&o32=anyexact&v32=%2B%2C %3F" +
        "&f33=cf_tracking_firefox35&o33=anyexact&v33=%2B%2C %3F" +
        "&f34=cf_tracking_firefox36&o34=anyexact&v34=%2B%2C %3F" +
        "&f35=cf_tracking_firefox37&o35=anyexact&v35=%2B%2C %3F" +
        "&f36=cf_tracking_firefox38&o36=anyexact&v36=%2B%2C %3F" +
        "&f37=cf_tracking_firefox39&o37=anyexact&v37=%2B%2C %3F" +
        "&f38=cf_tracking_firefox40&o38=anyexact&v38=%2B%2C %3F" +
        "&f39=cf_tracking_firefox41&o39=anyexact&v39=%2B%2C %3F" +
        "&f40=cf_tracking_firefox42&o40=anyexact&v40=%2B%2C %3F" +
        "&f41=cf_tracking_firefox43&o41=anyexact&v41=%2B%2C %3F" +
        "&f42=cf_tracking_firefox44&o42=anyexact&v42=%2B%2C %3F" +
        "&f43=cf_tracking_firefox45&o43=anyexact&v43=%2B%2C %3F" +
        "&f44=cf_tracking_firefox46&o44=anyexact&v44=%2B%2C %3F" +
        "&f45=cf_tracking_firefox47&o45=anyexact&v45=%2B%2C %3F" +
        "&f46=cf_tracking_firefox48&o46=anyexact&v46=%2B%2C %3F" +
        "&f47=cf_tracking_firefox49&o47=anyexact&v47=%2B%2C %3F" +
        "&f48=cf_tracking_firefox50&o48=anyexact&v48=%2B%2C %3F" +
        "&f49=cf_tracking_firefox51&o49=anyexact&v49=%2B%2C %3F" +
        "&creation_time=" + date_start + "&include_fields=id,resolution,creation_time,cf_last_resolved";
    var chart_data = initialize(365);
    d3.json(query, function(data) {
        if (!data) return new Error("Unable to load JSON data!");
        if (Object.keys(data) == "bugs") {
            process(data.bugs);
        }     
    });
</script>
